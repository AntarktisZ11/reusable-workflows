# This workflow generates documentation (PDFs, CSV BOM, interactive BOM, 3D-Renders, etc.)
# for when PCB was changed.

name: "KiBot - Generate KiCad Documentation For Changed PCB"

on:
  workflow_call:
    inputs:
      KiCadProjectName:
        description: The base filename of your project without extension (i.e. <KiCadProjectName>.kicad_pro).
        required: true
        type: string

      KiCadProjectDir:
        description: Path to the KiCad project directory relative to repository root.
        required: false
        type: string
        default: "."

      KiBot-Verbosity:
        description: Level of KiBot verbosity. Valid values are 0, 1, 2 or 3. Default is 0.
        required: false
        type: string
        default: 0

      Artifact-name:
        description: The name to be used in actions/upload-artifact. (Same as actions/download-artifact)
        required: false
        type: string
        default: kibot-gen

    outputs:
      artifact_uploaded:
        description: "Boolean for if an artifact was uploaded."
        value: ${{ jobs.Generate_PCB_Documentation.outputs.artifact_uploaded }}

jobs:
  Generate_PCB_Documentation:
    env:
      # Set this to the output folder for all of the generated files.
      OutputFolder: ${{ inputs.KiCadProjectDir }}/.kibot-gen/docs
      Schema: ${{ inputs.KiCadProjectDir }}/${{ inputs.KiCadProjectName }}.kicad_sch
      Board: ${{ inputs.KiCadProjectDir }}/${{ inputs.KiCadProjectName }}.kicad_pcb
    runs-on: ubuntu-latest

    outputs:
      artifact_uploaded: ${{ steps.check_uploaded.outputs.uploaded }}

    # These are all the steps that generate the files.
    steps:
      # Check out the files
      - uses: actions/checkout@v3
        # Include submodules due to custom component library being a submodule.
        with:
          submodules: true

      # Create boolean for if the filetype
      - name: Paths Changes Filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            schematic:
              - ${{ env.Schema }}
            board:
              - ${{ env.Board }}

      # Run KiBot to generate schematic documentation.
      - name: Generate schematic documentation
        if: steps.filter.outputs.schematic == 'true'
        uses: INTI-CMNB/KiBot@v2_k7
        with:
          config: .kibot/schematic_change.kibot.yaml
          dir: ${{ env.OutputFolder }}
          schema: ${{ env.Schema }}
          board: ${{ env.Board }}
          verbose: ${{ inputs.KiBot-Verbosity }}

      # Run KiBot to generate board documentation.
      - name: Generate board documentation
        if: steps.filter.outputs.board == 'true'
        uses: INTI-CMNB/KiBot@v2_k7
        with:
          config: .kibot/board_change.kibot.yaml
          dir: ${{ env.OutputFolder }}
          schema: ${{ env.Schema }}
          board: ${{ env.Board }}
          verbose: ${{ inputs.KiBot-Verbosity }}

      - name: Upload PCB Documentation artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.Artifact-name }}
          path: ${{ env.OutputFolder }}

      - name: Check for successful upload
        id: check_uploaded
        run: >
          if [ $(find ${{ env.OutputFolder }} -type f | wc -l) -eq 0 ] ;
            then echo "uploaded=false" >> "$GITHUB_OUTPUT" ;
            else echo "uploaded=true" >> "$GITHUB_OUTPUT" ;
          fi
